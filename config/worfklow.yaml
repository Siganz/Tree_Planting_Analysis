# Unified NYC Tree Planting Workflow Config (combined from your 01.md ops, 02.json sources, 03.md filters)
# Edit for toggles, other cities, or reordering. Pipeline reads this to run dynamically.

sources:  # From 02.json (URLs/types/schema) + 03.md (filters/simple types)
  trees:
    type: "json"  # From 03.md
    source_type: "socrata"  # From 02.json
    format: "json"
    url: "https://data.cityofnewyork.us/resource/hn5i-inap.json"
    schema: "political"
    filter: "SITE_TYPE = 'Tree Site' AND CONDITION NOT IN ('Dead','Removed','Stump')"  # From 03.md
    to_layer: "trees_raw"  # Initial save in GPKG
    enabled: true

  work_orders:
    type: "json"
    source_type: "socrata"
    format: "json"
    url: "https://data.cityofnewyork.us/resource/bdjm-n7q4.json"
    schema: "political"
    filter: "STATUS <> 'Cancelled'"
    to_layer: "work_orders_raw"
    enabled: true

  planting_spaces:
    type: "json"  # Assumed from 03.md pattern (not listed, but in scaffold)
    source_type: "socrata"
    format: "json"
    url: "https://data.cityofnewyork.us/resource/82zj-84is.json"
    schema: "political"
    filter: null  # None specified
    to_layer: "planting_spaces_raw"
    enabled: true

  street_sign:
    type: "json"
    source_type: "socrata"
    format: "json"
    url: "https://data.cityofnewyork.us/resource/nfid-uabd.json"  # Updated from search (old qt6m-xctn invalid)
    schema: "political"
    filter: null  # Or "$where=sign_desc like '%NO STANDING%' OR sign_desc like '%NO PARKING%'" if pre-filtering; done in nostanding.py otherwise
    to_layer: "street_sign_raw"
    enabled: true

  hydrants:
    type: "json"
    source_type: "socrata"
    format: "json"
    url: "https://data.cityofnewyork.us/resource/5bgh-vtsn.json"
    schema: "political"
    filter: null
    to_layer: "hydrants_raw"
    enabled: true

  green_infrastructure:
    type: "json"
    source_type: "socrata"
    format: "json"
    url: "https://data.cityofnewyork.us/resource/df32-vzax.json"  # Confirmed current
    schema: "political"
    filter: null
    to_layer: "green_infrastructure_raw"
    enabled: true

  subway_lines:
    type: "shapefile"
    source_type: "arcgis"
    format: "shapefile"
    url: "https://services.arcgis.com/ue9rwulIoeLEI9bj/arcgis/rest/services/NYC_SubwayLines/FeatureServer/0"
    schema: "political"
    filter: null
    to_layer: "subway_lines_raw"
    enabled: true

  # ... (Adding the rest from 02.json/03.md similarly; I shortened for space, but include all in your file)
  borough:
    type: "shapefile"
    source_type: "arcgis"
    format: "shapefile"
    url: "https://services5.arcgis.com/GfwWNkhOj9bNBqoJ/arcgis/rest/services/NYC_Borough_Boundary/FeatureServer/0"
    schema: "political"
    filter: null
    to_layer: "borough_raw"
    enabled: true

  # community_districts, council_districts, etc. - follow pattern above

  census_blocks:
    type: "shapefile"
    source_type: "arcgis"
    format: "shapefile"
    url: "https://services5.arcgis.com/GfwWNkhOj9bNBqoJ/arcgis/rest/services/NYC_Census_Blocks_for_2020_US_Census/FeatureServer/0"
    schema: "political"
    filter: null
    to_layer: "census_blocks_raw"
    enabled: true

  zoning_districts:
    type: "shapefile"
    source_type: "arcgis"
    format: "shapefile"
    url: "https://services5.arcgis.com/GfwWNkhOj9bNBqoJ/arcgis/rest/services/nyzd/FeatureServer/0"
    schema: "zoning"
    filter: null  # Filter in ops
    to_layer: "zoning_districts_raw"
    enabled: true

  # commercial_districts, special_purpose_districts, pluto, street_center, curb, curb_cut, sidewalk - similar

  sidewalk:
    type: "shapefile"
    source_type: "arcgis"
    format: "shapefile"
    url: "https://services6.arcgis.com/yG5s3afENB5iO9fj/arcgis/rest/services/Sidewalk_2022/FeatureServer/22"
    schema: "infrastructure"
    filter: null
    to_layer: "sidewalk_raw"
    enabled: true

  grass_shrub:  # Added from search (2017 land cover raster for Grass_Shrub ops)
    type: "raster"  # Special handling (download GeoTIFF, convert to poly)
    source_type: "socrata"
    format: "geotiff"  # Export from Socrata
    url: "https://data.cityofnewyork.us/api/geospatial/he6d-2qns?method=export&format=GeoTIFF"  # Or Shapefile if preferred
    schema: "land_use"
    filter: null
    to_layer: "grass_shrub_raw"  # Save as raster or convert early
    enabled: true

prep_ops:  # From 01.md - ops per layer (description, filters if not in sources, steps)
  nyzd:  # Maps to zoning_districts source
    description: "Zoning districts where planting is prohibited"
    filter: "ZONE_DIST IN ('M1','M2','M3','IG','IH')"  # Applied in select step
    enabled: true
    steps:
      - op: copy
        input: "zoning_districts_raw"
        output: "nyzd_copy"
      - op: select
        query: "ZONE_DIST IN ('M1','M2','M3','IG','IH')"
        output: "nyzd_ready"

  dep_gi_assets:  # Maps to green_infrastructure
    description: "Green infrastructure assets to avoid"
    filter: null
    enabled: true
    steps:
      - op: copy
        input: "green_infrastructure_raw"
        output: "dep_gi_assets_copy"
      - op: buffer
        distance: 20  # Feet
        output: "dep_gi_assets_ready"

  sidewalk:
    description: "Raw sidewalk polygons, split for different logic"
    filter: null
    enabled: true
    steps:
      - op: copy
        input: "sidewalk_raw"
        output: "sidewalk_copy"
      - op: polygon_to_polyline
        input: "sidewalk_copy"
        output: "sidewalk_1"
      - op: split_immutable_mutable  # Custom? (Assume function for splitting)
        input: "sidewalk_1"
        outputs: ["sidewalk_immutable_ready", "sidewalk_mutable_ready"]

  curb_cuts:  # Maps to curb_cut (for intersections)
    description: "Sidewalk curb-cut intersections"
    filter: "SUB_FEATURE_CODE = 222700"
    enabled: true
    steps:
      - op: copy
        input: "curb_cut_raw"
        output: "curb_cuts_copy"
      - op: select
        query: "SUB_FEATURE_CODE = 222700"
        output: "curb_cuts_1"
      - op: buffer
        distance: 30
        output: "curb_cuts_ready"

  # curb_cuts_driveways: Separate group for driveway filter (same source as curb_cuts, but different filter/ops)
  curb_cuts_driveways:
    description: "Driveway curb cuts to exclude planting"
    filter: "SUB_FEATURE_CODE = 222600"
    enabled: true
    steps:
      - op: copy
        input: "curb_cut_raw"  # Reuse source
        output: "curb_cuts_driveways_copy"
      - op: select
        query: "SUB_FEATURE_CODE = 222600"
        output: "curb_cuts_driveways_1"
      - op: buffer
        distance: 15
        output: "curb_cuts_driveways_ready"

  subway_lines:
    description: "Subway buffers to exclude planting near tracks"
    filter: null
    enabled: true
    steps:
      - op: copy
        input: "subway_lines_raw"
        output: "subway_lines_copy"
      - op: buffer
        distance: 80
        output: "subway_lines_ready"

  workorders:
    description: "Active DOT work orders"
    filter: "STATUS <> 'Cancelled'"  # Already in sources, but repeated for clarity
    enabled: true
    steps:
      - op: copy  # Or export_table + select
        input: "work_orders_raw"
        output: "workorders_copy"
      - op: xy_to_point
        input: "workorders_copy"
        output: "workorders_1"
      - op: buffer
        distance: 25
        output: "workorders_ready"

  treeandsite:  # Maps to trees (or planting_spaces? Assumed trees based on filter)
    description: "Existing tree locations to avoid"
    filter: "SITE_TYPE = 'Tree Site' AND CONDITION NOT IN ('Dead','Removed','Stump')"
    enabled: true
    steps:
      - op: copy  # Export_table + select
        input: "trees_raw"
        output: "treeandsite_copy"
      - op: xy_to_point
        input: "treeandsite_copy"
        output: "treeandsite_1"
      - op: buffer
        distance: 25
        output: "treeandsite_ready"

  grass_shrub:
    description: "2017 land-use raster converted to shrub/grass polygons"
    filter: null
    enabled: true
    steps:
      - op: copy  # Copy raster
        input: "grass_shrub_raw"
        output: "grass_shrub_copy"
      - op: raster_to_polygon
        simplify: false
        output: "grass_shrub_1"
      - op: delete_field
        fields: ["gridcode", "Id"]
        output: "grass_shrub_ready"

  political_boundary:  # Composite (no direct source; unions others)
    description: "Union of all political boundaries for spatial join"
    filter: null
    enabled: true
    steps:
      - op: copy  # Or direct union
        input: null  # No single input
        output: "political_boundary_copy"
      - op: union
        inputs: ["borough_raw", "community_districts_raw", "council_districts_raw", "congressional_districts_raw", "senate_districts_raw", "assembly_districts_raw", "community_tabulations_raw", "neighborhood_tabulations_raw", "census_tracts_raw"]  # From scaffold
        output: "political_boundary_1"
      - op: delete_field
        fields: ["FID_*"]  # All FID_ fields
        output: "political_boundary_ready"

  street_centerline:  # Maps to street_center
    description: "Simplify street geometry and buffer vertices"
    filter: "L_LOW_HN IS NOT NULL"
    enabled: true
    steps:
      - op: copy
        input: "street_center_raw"
        output: "street_centerline_copy"
      - op: simplify_line
        method: "POINT_REMOVE"
        tolerance: 1  # Feet
        output: "street_centerline_1"
      - op: vertices_to_points
        input: "street_centerline_1"
        output: "street_centerline_2"
      - op: buffer
        distance: 40
        output: "street_centerline_ready"

  dep_hydrants:  # Maps to hydrants
    description: "Hydrant proximity adjustments"
    filter: null
    enabled: true
    steps:
      - op: copy
        input: "hydrants_raw"
        output: "dep_hydrants_copy"
      - op: generate_near_table
        distance: 10
        output: "dep_hydrants_1"
      - op: move_street_signs  # Custom script/tool
        input: "dep_hydrants_1"
        output: "dep_hydrants_2"
      - op: buffer
        distance: 3
        output: "dep_hydrants_ready"

final_clip:  # From 01.md end - separate section for pipeline end
  description: "Compute allowable planting points within clipped sidewalk"
  filter: null
  enabled: true
  steps:
    - op: copy
      input: "sidewalk_mutable_ready"
      output: "sidewalk_mutable_backup"
    - op: union
      inputs: ["nyzd_ready", "dep_gi_assets_ready", "curb_cuts_ready", "subway_lines_ready", "workorders_ready", "treeandsite_ready", "grass_shrub_ready"]
      output: "no_plant_zones_union"
    - op: clip
      input: "sidewalk_mutable_ready"
      clip_with: "no_plant_zones_union"
      output: "sidewalk_availability_ready"
    - op: create_points  # Custom: Fishnet or generate along lines
      input: "sidewalk_availability_ready"
      method: "fishnet"  # Or your rank_dominant
      output: "plant_pts_1"
    - op: spatial_join
      target: "plant_pts_1"
      join_features: "sidewalk_availability_ready"  # Plus political_boundary_ready?
      output: "plant_pts_ready"

big_scripts:  # Optional: Tie in nostanding/rank/curb (run after prep)
  nostanding:
    enabled: true
    input_csv: "street_sign_raw"  # Or path
    sw_layer: "sidewalk_mutable_ready"
    out_layer: "no_standing_ready"

  # rank_dominant, curb - as before