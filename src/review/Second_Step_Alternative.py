# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2025-06-10 11:33:01
"""
import arcpy

def SecondStepAlternative():  # Second_Step_Alternative
    """ArcPy model step generating alternative curb buffers."""

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Model Environment settings
    with arcpy.EnvManager(scratchWorkspace="D:\\ArcGIS\\Projects\\Street_Tree_Planting_Analysis\\Scrap.gdb"):
        SIDEWALK_3_ = "D:\\ArcGIS\\Data\\FileGDB-data-Planimetric_2022_AGOL_Link.gdb\\SIDEWALK"
        PLUTO = "D:\\ArcGIS\\Data\\Pluto\\MapPLUTO24v1_1.gdb\\MapPLUTO_24v1_1_clipped"
        Field_Map = "Borough \"Borough\" true false false 2 Text 0 0,First,#,D:\\ArcGIS\\Data\\Pluto\\MapPLUTO24v1_1.gdb\\MapPLUTO_24v1_1_clipped,Borough,0,1;Block \"Block\" true false false 4 Long 0 0,First,#,D:\\ArcGIS\\Data\\Pluto\\MapPLUTO24v1_1.gdb\\MapPLUTO_24v1_1_clipped,Block,-1,-1;Lot \"Lot\" true false false 2 Short 0 0,First,#,D:\\ArcGIS\\Data\\Pluto\\MapPLUTO24v1_1.gdb\\MapPLUTO_24v1_1_clipped,Lot,-1,-1;CD \"CD\" true true false 2 Short 0 0,First,#,D:\\ArcGIS\\Data\\Pluto\\MapPLUTO24v1_1.gdb\\MapPLUTO_24v1_1_clipped,CD,-1,-1"

        # Process: Copy Pluto (Export Features) (conversion)
        PLUTO_Copy = fr"{arcpy.env.scratchGDB}\Pluto_Copy"
        arcpy.conversion.ExportFeatures(in_features=PLUTO, out_features=PLUTO_Copy, field_mapping=Field_Map)

        # Process: Calculate Unique Blocks (Calculate Field) (management)
        PLUTO_Unique_Blocks = arcpy.management.CalculateField(in_table=PLUTO_Copy, field="Unique_Blocks", expression="Concatenate($feature.Borough,$feature.Block)", expression_type="ARCADE")[0]

        # Process: Pairwise Dissolve (Pairwise Dissolve) (analysis)
        PLUTO_Dissolve = fr"{arcpy.env.scratchGDB}\PLUTO_Dissolve"
        arcpy.analysis.PairwiseDissolve(in_features=PLUTO_Unique_Blocks, out_feature_class=PLUTO_Dissolve, dissolve_field=["Unique_Blocks"], multi_part="SINGLE_PART")

        # Process: Sidewalk Erase (Pairwise Erase) (analysis)
        Output_Feature_Class = fr"{arcpy.env.scratchGDB}\SIDEWALK_Erase"
        arcpy.analysis.PairwiseErase(in_features=SIDEWALK_3_, erase_features=PLUTO_Dissolve, out_feature_class=Output_Feature_Class)

        # Process: Collapse Hydro Polygon (Collapse Hydro Polygon) (cartography)
        Sidewalk_Collapse = fr"{arcpy.env.scratchGDB}\Sidewalk_Collapse"
        Output_Polygon_Feature_Class = ""
        Sidewalk_Collapse_InPoly_DecodeID, Sidewalk_Collapse_InLine_DecodeID = arcpy.cartography.CollapseHydroPolygon(in_features=[Output_Feature_Class], out_line_feature_class=Sidewalk_Collapse, out_poly_feature_class=Output_Polygon_Feature_Class)

        # Process: Multipart To Singlepart (Multipart To Singlepart) (management)
        PLUTO_Singlepart = fr"{arcpy.env.scratchGDB}\PLUTO_Singlepart"
        arcpy.management.MultipartToSinglepart(in_features=PLUTO_Dissolve, out_feature_class=PLUTO_Singlepart)

        # Process: Add Unique Block Parts (Add Field) (management)
        PLUTO_Unique = arcpy.management.AddField(in_table=PLUTO_Singlepart, field_name="Unique_Block_Parts", field_type="TEXT")[0]

        # Process: Calculate Unique PLUTO Blocks (Calculate Field) (management)
        Pluto_Blocks_2_ = arcpy.management.CalculateField(in_table=PLUTO_Unique, field="Unique_Block_Parts", expression="str(!Unique_Blocks!)+str(!OBJECTID!)")[0]

        # Process: Pluto Blocks Copy (Copy Features) (management)
        Pluto_Working = "D:\\ArcGIS\\Projects\\Street_Tree_Planting_Analysis\\Scrap.gdb\\Pluto_Blocks"
        arcpy.management.CopyFeatures(in_features=Pluto_Blocks_2_, out_feature_class=Pluto_Working)

        # Process: Pluto + Buffer (Pairwise Buffer) (analysis)
        Pluto_Buffer' = fr"{arcpy.env.scratchGDB}\Pluto_Buffer"
        arcpy.analysis.PairwiseBuffer(in_features=Pluto_Blocks_2_, out_feature_class=Pluto_Buffer', buffer_distance_or_field="25 Feet")

        # Process: Pairwise Erase (Pairwise Erase) (analysis)
        Pluto_Prep = fr"{arcpy.env.scratchGDB}\Pluto_Buffer_Topology"
        arcpy.analysis.PairwiseErase(in_features=Pluto_Buffer', erase_features=PLUTO_Dissolve, out_feature_class=Pluto_Prep)

        # Process: Pairwise Intersect (Pairwise Intersect) (analysis)
        Sidewalk_Pluto = "D:\\ArcGIS\\Projects\\Street_Tree_Planting_Analysis\\Street_Tree_Planting_Analysis.gdb\\Sidewalk_Pluto"
        arcpy.analysis.PairwiseIntersect(in_features=[Sidewalk_Collapse, Pluto_Prep], out_feature_class=Sidewalk_Pluto)

        # Process: Delete Field (2) (Delete Field) (management)
        Sidewalk_Pluto_3_ = arcpy.management.DeleteField(in_table=Sidewalk_Pluto, drop_field=["FID_Sidewalk_Collapse", "InPoly_ID", "InPoly_FID", "InLine_ID", "InLine_FID", "COLLAPSED", "FID_Pluto_Buffer_Topology_Erase_Clean", "ORIG_FID"])[0]

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(autoCommit=1000, baUseDetailedAggregation=False, cellAlignment="DEFAULT", 
                          cellSize="MAXOF", cellSizeProjectionMethod="CONVERT_UNITS", coincidentPoints="MEAN", 
                          compression="LZ77", maintainAttachments=True, maintainSpatialIndex=False, 
                          matchMultidimensionalVariable=True, nodata="NONE", outputMFlag="Same As Input", 
                          outputZFlag="Same As Input", preserveGlobalIds=False, pyramid="PYRAMIDS -1 NEAREST DEFAULT 75 NO_SKIP NO_SIPS", 
                          qualifiedFieldNames=True, randomGenerator="0 ACM599", rasterStatistics="STATISTICS 1 1", 
                          resamplingMethod="NEAREST", terrainMemoryUsage=False, tileSize="128 128", 
                          tinSaveVersion="CURRENT", transferDomains=False, transferGDBAttributeProperties=False, 
                          unionDimension=False, workspace="D:\\ArcGIS\\Projects\\Street_Tree_Planting_Analysis\\Scrap.gdb"):
        SecondStepAlternative()
